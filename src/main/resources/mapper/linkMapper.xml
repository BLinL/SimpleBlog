<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.simpleblog.blog.mapper.linkMapper">
  <resultMap id="BaseResultMap" type="com.github.simpleblog.blog.entity.link">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="linkAddress" jdbcType="VARCHAR" property="linkaddress" />
    <result column="linkDescription" jdbcType="VARCHAR" property="linkdescription" />
    <result column="linkOrder" jdbcType="INTEGER" property="linkorder" />
    <result column="linkTitle" jdbcType="VARCHAR" property="linktitle" />
    <result column="linkIcon" jdbcType="VARCHAR" property="linkicon" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, linkAddress, linkDescription, linkOrder, linkTitle, linkIcon
  </sql>
  <select id="selectByExample" parameterType="com.github.simpleblog.blog.entity.linkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from link
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from link
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.simpleblog.blog.entity.linkExample">
    delete from link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.simpleblog.blog.entity.link">
    insert into link (id, linkAddress, linkDescription, 
      linkOrder, linkTitle, linkIcon
      )
    values (#{id,jdbcType=VARCHAR}, #{linkaddress,jdbcType=VARCHAR}, #{linkdescription,jdbcType=VARCHAR}, 
      #{linkorder,jdbcType=INTEGER}, #{linktitle,jdbcType=VARCHAR}, #{linkicon,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.simpleblog.blog.entity.link">
    insert into link
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="linkaddress != null">
        linkAddress,
      </if>
      <if test="linkdescription != null">
        linkDescription,
      </if>
      <if test="linkorder != null">
        linkOrder,
      </if>
      <if test="linktitle != null">
        linkTitle,
      </if>
      <if test="linkicon != null">
        linkIcon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="linkaddress != null">
        #{linkaddress,jdbcType=VARCHAR},
      </if>
      <if test="linkdescription != null">
        #{linkdescription,jdbcType=VARCHAR},
      </if>
      <if test="linkorder != null">
        #{linkorder,jdbcType=INTEGER},
      </if>
      <if test="linktitle != null">
        #{linktitle,jdbcType=VARCHAR},
      </if>
      <if test="linkicon != null">
        #{linkicon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.simpleblog.blog.entity.linkExample" resultType="java.lang.Long">
    select count(*) from link
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update link
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.linkaddress != null">
        linkAddress = #{record.linkaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.linkdescription != null">
        linkDescription = #{record.linkdescription,jdbcType=VARCHAR},
      </if>
      <if test="record.linkorder != null">
        linkOrder = #{record.linkorder,jdbcType=INTEGER},
      </if>
      <if test="record.linktitle != null">
        linkTitle = #{record.linktitle,jdbcType=VARCHAR},
      </if>
      <if test="record.linkicon != null">
        linkIcon = #{record.linkicon,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update link
    set id = #{record.id,jdbcType=VARCHAR},
      linkAddress = #{record.linkaddress,jdbcType=VARCHAR},
      linkDescription = #{record.linkdescription,jdbcType=VARCHAR},
      linkOrder = #{record.linkorder,jdbcType=INTEGER},
      linkTitle = #{record.linktitle,jdbcType=VARCHAR},
      linkIcon = #{record.linkicon,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.simpleblog.blog.entity.link">
    update link
    <set>
      <if test="linkaddress != null">
        linkAddress = #{linkaddress,jdbcType=VARCHAR},
      </if>
      <if test="linkdescription != null">
        linkDescription = #{linkdescription,jdbcType=VARCHAR},
      </if>
      <if test="linkorder != null">
        linkOrder = #{linkorder,jdbcType=INTEGER},
      </if>
      <if test="linktitle != null">
        linkTitle = #{linktitle,jdbcType=VARCHAR},
      </if>
      <if test="linkicon != null">
        linkIcon = #{linkicon,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.simpleblog.blog.entity.link">
    update link
    set linkAddress = #{linkaddress,jdbcType=VARCHAR},
      linkDescription = #{linkdescription,jdbcType=VARCHAR},
      linkOrder = #{linkorder,jdbcType=INTEGER},
      linkTitle = #{linktitle,jdbcType=VARCHAR},
      linkIcon = #{linkicon,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>